version: '3.6'

services:

  drone:
    image: ${DRONE_SERVER_DOCKER_IMAGE}
    container_name: ${DRONE_SERVER_SERVICE_DOMAIN}
    environment:
      - DRONE_GITEA_SERVER=http://${GITEA_DOMAIN}
      - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
      - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
      - DRONE_LOGS_TRACE=true
      - DRONE_AGENTS_ENABLED=true
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=${DRONE_SERVER_SERVICE_DOMAIN}
      - DRONE_SERVER_PROTO=http
      - DRONE_CLEANUP_INTERVAL=60m
      - DRONE_CLEANUP_DISABLED=false
      - DRONE_CLEANUP_DEADLINE_RUNNING=1h
      - DRONE_CLEANUP_DEADLINE_PENDING=2h
      - DRONE_USER_CREATE=username:${DRONE_ADMIN_USERNAME},admin:true
    networks:
      - "traefik"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.drone-http.entrypoints=http"
      - "traefik.http.routers.drone-http.rule=Host(`${DRONE_SERVER_SERVICE_DOMAIN}`)"
      - "traefik.http.routers.drone-http.middlewares=redirect-https@file"
      - "traefik.http.routers.drone-https.entrypoints=https"
      - "traefik.http.routers.drone-https.rule=Host(`${DRONE_SERVER_SERVICE_DOMAIN}`)"
      - "traefik.http.routers.drone-https.tls=true"
      - "traefik.http.routers.drone-https.middlewares=gzip@file"
      - "traefik.http.services.drone-backend.loadbalancer.server.scheme=http"
      - "traefik.http.services.drone-backend.loadbalancer.server.port=80"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "./data:/data"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    extra_hosts:
      - "${DRONE_SERVER_SERVICE_DOMAIN}:127.0.0.1"
    healthcheck:
      test: ["CMD-SHELL","wget -q --spider --proxy off localhost:80/healthz || exit 1"]
      interval: 5s

  drone-runner:
    image: ${DRONE_RUNNER_DOCKER_IMAGE}
    container_name: ${DRONE_RUNNER_SERVICE_DOMAIN}
    expose:
      - 3000
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=${DRONE_SERVER_SERVICE_DOMAIN}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
      - DRONE_RUNNER_NAME=${DRONE_RUNNER_SERVICE_DOMAIN}
      - DRONE_RUNNER_NETWORKS=traefik
    networks:
      - "traefik"
    restart: always
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./data:/data"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    extra_hosts:
      - "${DRONE_RUNNER_SERVICE_DOMAIN}:127.0.0.1"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy off localhost:3000/healthz || exit 1"]
      interval: 5s

networks:
  traefik:
    external: true